{"repository_name":"github.com/stumpycr/stumpy_png","body":"# stumpy_png\n[![Build Status](https://travis-ci.org/stumpycr/stumpy_png.svg?branch=master)](https://travis-ci.org/stumpycr/stumpy_png)\n\n[Documentation](https://docs.leonrische.me/stumpy_png/)\n\n## Interface\n\n* `StumpyPNG.read(path : String) : Canvas` read a PNG image file from a path\n* `StumpyPNG.read(io : IO) : Canvas` read a PNG image file from any IO object\n* `StumpyPNG.write(canvas, path : String, bit_depth: 16, color_type: :rgb_alpha)` save a canvas as a PNG image file\n* `StumpyPNG.write(canvas, io : IO, bit_depth: 16, color_type: :rgb_alpha)` write a canvas as PNG data to any IO object\n  * `bit_depth` is optional, valid values are `8` and `16`(default)\n  * `color_type` is optional, valid values are `:grayscale`, `:grayscale_alpha`, `:rgb` and `:rgb_alpha`(default)\n* `StumpyPNG::PNG`, helper class to store some state while parsing PNG files\n* `Canvas` and `RGBA` from [stumpy_core](https://github.com/stumpycr/stumpy_core)\n\n## Usage\n\n### Install the `stumpy_png` shard\n\n1. `shards init`\n2. Add the dependency to the `shard.yml` file\n ``` yaml\n ...\n dependencies:\n   stumpy_png:\n     github: stumpycr/stumpy_png\n     version: \"~> 4.4.1\"\n ...\n ```\n3. `shards install`\n\n### Reading\n\n``` crystal\nrequire \"stumpy_png\"\n\ncanvas = StumpyPNG.read(\"foo.png\")\nr, g, b = canvas[0, 0].to_rgb8\nputs \"red=#{r}, green=#{g}, blue=#{b}\"\n```\n\n### Writing\n\n``` crystal\nrequire \"stumpy_png\"\ninclude StumpyPNG\n\ncanvas = Canvas.new(256, 256)\n\n(0..255).each do |x|\n  (0..255).each do |y|\n    # RGBA.from_rgb_n(values, bit_depth) is an internal helper method\n    # that creates an RGBA object from a rgb triplet with a given bit depth\n    color = RGBA.from_rgb_n(x, y, 255, 8)\n    canvas[x, y] = color\n  end\nend\n\nStumpyPNG.write(canvas, \"rainbow.png\")\n```\n\n![PNG image with a color gradient](examples/rainbow.png)\n\n(See `examples/` for more examples)\n\n## Reading PNG files\n\n### Color Types\n\n- [x] Grayscale\n- [x] Grayscale + Alpha\n- [x] RGB\n- [x] RGB + Alpha\n- [x] Palette\n\n### Filter Types\n\n- [x] None\n- [x] Sub\n- [x] Up\n- [x] Average\n- [x] Paeth\n\n### Interlacing Methods\n\n- [x] None\n- [x] Adam7\n\n### Ancillary Chunks\n\nNone are supported right now.\n\n## Writing\n\n* RGB with 8 or 16 bits\n* RGB + Alpha with 8 or 16 bits\n* Grayscale with 8 or 16 bits\n* Grayscale + Alpha with 8 or 16 bits\n\n## Troubleshooting\n\nIf you run into errors like\n\n```bash\n/usr/bin/ld: cannot find -lz\ncollect2: error: ld returned 1 exit status\n```\n\nmake sure `zlib` is installed\n([Installing zlib under ubuntu](https://ubuntuforums.org/showthread.php?t=1528204)).\n\n## Contributors\n\nThanks goes to these wonderful people ([emoji key](https://github.com/kentcdodds/all-contributors#emoji-key)):\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore -->\n| [<img src=\"https://avatars.githubusercontent.com/u/2788811?v=3\" width=\"100px;\"/><br /><sub><b>Chris Hobbs</b></sub>](https://github.com/rx14)<br />[ðŸ’»](https://github.com/l3kn/stumpy_png/commits?author=RX14 \"Code\") | [<img src=\"https://avatars.githubusercontent.com/u/209371?v=3\" width=\"100px;\"/><br /><sub><b>Ary Borenszweig</b></sub>](https://github.com/asterite)<br />[ðŸ’»](https://github.com/l3kn/stumpy_png/commits?author=asterite \"Code\") | [<img src=\"https://avatars.githubusercontent.com/u/90345?v=3\" width=\"100px;\"/><br /><sub><b>Alex Muscar</b></sub>](https://github.com/muscar)<br />[ðŸ’»](https://github.com/l3kn/stumpy_png/commits?author=muscar \"Code\") | [<img src=\"https://avatars2.githubusercontent.com/u/18718?v=4\" width=\"100px;\"/><br /><sub><b>Dru Jensen</b></sub>](https://github.com/drujensen)<br />[ðŸ’»](https://github.com/l3kn/stumpy_png/commits?author=drujensen \"Code\") | [<img src=\"https://avatars3.githubusercontent.com/u/5798442?v=4\" width=\"100px;\"/><br /><sub><b>kojix2</b></sub>](https://github.com/kojix2)<br />[ðŸ“–](https://github.com/l3kn/stumpy_png/commits?author=kojix2 \"Documentation\") | [<img src=\"https://avatars0.githubusercontent.com/u/4363779?v=4\" width=\"100px;\"/><br /><sub><b>obskyr</b></sub>](http://obskyr.io/)<br />[ðŸ’»](https://github.com/l3kn/stumpy_png/commits?author=obskyr \"Code\") | [<img src=\"https://avatars3.githubusercontent.com/u/35064754?v=4\" width=\"100px;\"/><br /><sub><b>r00ster</b></sub>](https://github.com/r00ster91)<br />[ðŸ’»](https://github.com/l3kn/stumpy_png/commits?author=r00ster91 \"Code\") |\n| :---: | :---: | :---: | :---: | :---: | :---: | :---: |\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n\nThis project follows the [all-contributors](https://github.com/kentcdodds/all-contributors) specification. Contributions of any kind welcome!\n","program":{"html_id":"github.com/stumpycr/stumpy_png/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/stumpycr/stumpy_png","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/stumpycr/stumpy_png/CrcIO","path":"CrcIO.html","kind":"class","full_name":"CrcIO","name":"CrcIO","abstract":false,"superclass":{"html_id":"github.com/stumpycr/stumpy_png/IO","kind":"class","full_name":"IO","name":"IO"},"ancestors":[{"html_id":"github.com/stumpycr/stumpy_png/IO","kind":"class","full_name":"IO","name":"IO"},{"html_id":"github.com/stumpycr/stumpy_png/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/stumpycr/stumpy_png/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"stumpy_png/crc_io.cr","line_number":5,"url":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/crc_io.cr"}],"repository_name":"github.com/stumpycr/stumpy_png","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/crc_io.cr#L9","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"crc:UInt32-instance-method","html_id":"crc:UInt32-instance-method","name":"crc","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt32","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/crc_io.cr#L8","def":{"name":"crc","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"@crc"}},{"id":"read(slice:Slice(UInt8))-instance-method","html_id":"read(slice:Slice(UInt8))-instance-method","name":"read","doc":null,"summary":null,"abstract":false,"args":[{"name":"slice","doc":null,"default_value":"","external_name":"slice","restriction":"Slice(UInt8)"}],"args_string":"(slice : Slice(UInt8))","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/crc_io.cr#L14","def":{"name":"read","args":[{"name":"slice","doc":null,"default_value":"","external_name":"slice","restriction":"Slice(UInt8)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"0"}},{"id":"reset-instance-method","html_id":"reset-instance-method","name":"reset","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/crc_io.cr#L23","def":{"name":"reset","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@crc = 0_u32"}},{"id":"size:Int32-instance-method","html_id":"size:Int32-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/crc_io.cr#L7","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@size"}},{"id":"size=(size)-instance-method","html_id":"size=(size)-instance-method","name":"size=","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"args_string":"(size)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/crc_io.cr#L7","def":{"name":"size=","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@size = size"}},{"id":"write(slice:Slice(UInt8))-instance-method","html_id":"write(slice:Slice(UInt8))-instance-method","name":"write","doc":null,"summary":null,"abstract":false,"args":[{"name":"slice","doc":null,"default_value":"","external_name":"slice","restriction":"Slice(UInt8)"}],"args_string":"(slice : Slice(UInt8))","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/crc_io.cr#L18","def":{"name":"write","args":[{"name":"slice","doc":null,"default_value":"","external_name":"slice","restriction":"Slice(UInt8)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@crc = CRC32.update(slice, @crc)\n@size = @size + slice.size\n"}}],"macros":[],"types":[]},{"html_id":"github.com/stumpycr/stumpy_png/StumpyPNG","path":"StumpyPNG.html","kind":"module","full_name":"StumpyPNG","name":"StumpyPNG","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/stumpycr/stumpy_png/StumpyCore","kind":"module","full_name":"StumpyCore","name":"StumpyCore"}],"locations":[{"filename":"stumpy_png/utils.cr","line_number":1,"url":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/utils.cr"},{"filename":"stumpy_png/chunk.cr","line_number":5,"url":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/chunk.cr"},{"filename":"stumpy_png/datastream.cr","line_number":5,"url":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/datastream.cr"},{"filename":"stumpy_png/filters.cr","line_number":1,"url":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/filters.cr"},{"filename":"stumpy_png/scanline.cr","line_number":1,"url":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/scanline.cr"},{"filename":"stumpy_png/png.cr","line_number":6,"url":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/png.cr"},{"filename":"stumpy_png.cr","line_number":8,"url":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png.cr"}],"repository_name":"github.com/stumpycr/stumpy_png","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"HEADER","name":"HEADER","value":"9894494448401390090_u64","doc":null,"summary":null},{"id":"WRITE_BIT_DEPTHS","name":"WRITE_BIT_DEPTHS","value":"{8, 16}","doc":null,"summary":null},{"id":"WRITE_COLOR_TYPES","name":"WRITE_COLOR_TYPES","value":"{:rgb => 2_u8, :rgb_alpha => 6_u8, :grayscale => 0_u8, :grayscale_alpha => 4_u8}","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/stumpycr/stumpy_png/StumpyCore","kind":"module","full_name":"StumpyCore","name":"StumpyCore"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"read(path:String)-class-method","html_id":"read(path:String)-class-method","name":"read","doc":null,"summary":null,"abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"args_string":"(path : String)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png.cr#L21","def":{"name":"read","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"File.open(path, \"rb\") do |file|\n  self.read(file)\nend"}},{"id":"read(io:IO)-class-method","html_id":"read(io:IO)-class-method","name":"read","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png.cr#L27","def":{"name":"read","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"png = PNG.new\n(Datastream.read(io)).chunks.each do |chunk|\n  png.parse_chunk(chunk)\nend\npng.canvas\n"}},{"id":"write(canvas,path:String,**options)-class-method","html_id":"write(canvas,path:String,**options)-class-method","name":"write","doc":null,"summary":null,"abstract":false,"args":[{"name":"canvas","doc":null,"default_value":"","external_name":"canvas","restriction":""},{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"args_string":"(canvas, path : String, **options)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png.cr#L37","def":{"name":"write","args":[{"name":"canvas","doc":null,"default_value":"","external_name":"canvas","restriction":""},{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"File.open(path, \"wb\") do |file|\n  self.write(canvas, file, **options)\nend"}},{"id":"write(canvas,io:IO,**options)-class-method","html_id":"write(canvas,io:IO,**options)-class-method","name":"write","doc":null,"summary":null,"abstract":false,"args":[{"name":"canvas","doc":null,"default_value":"","external_name":"canvas","restriction":""},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(canvas, io : IO, **options)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png.cr#L43","def":{"name":"write","args":[{"name":"canvas","doc":null,"default_value":"","external_name":"canvas","restriction":""},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"bit_depth = options.fetch(:bit_depth, 16)\ncolor_type = options.fetch(:color_type, :rgb_alpha)\nif WRITE_BIT_DEPTHS.includes?(bit_depth)\nelse\n  raise(\"Invalid bit depth: #{bit_depth}, options: #{WRITE_BIT_DEPTHS.inspect}\")\nend\nif bit_depth.is_a?(Symbol)\n  return\nend\nif WRITE_COLOR_TYPES.has_key?(color_type)\nelse\n  raise(\"Invalid color type: #{color_type}, options: #{WRITE_COLOR_TYPES.keys.inspect}\")\nend\nio.write_bytes(HEADER, IO::ByteFormat::BigEndian)\ncrc_io = CrcIO.new\nmulti = IO::MultiWriter.new(crc_io, io)\nio.write_bytes(13_u32, IO::ByteFormat::BigEndian)\nmulti << \"IHDR\"\nmulti.write_bytes(canvas.width.to_u32, IO::ByteFormat::BigEndian)\nmulti.write_bytes(canvas.height.to_u32, IO::ByteFormat::BigEndian)\nmulti.write_byte(bit_depth.to_u8)\nmulti.write_byte(WRITE_COLOR_TYPES[color_type])\nmulti.write_byte(0_u8)\nmulti.write_byte(0_u8)\nmulti.write_byte(0_u8)\nmulti.write_bytes(crc_io.crc.to_u32, IO::ByteFormat::BigEndian)\ncrc_io.reset\nio.write_bytes(0_u32, IO::ByteFormat::BigEndian)\nmulti << \"IDAT\"\ncrc_io.size = 0\nZlib::Writer.open(multi) do |deflate|\n  case color_type\n  when :rgb_alpha\n    write_rgb_alpha(canvas, deflate, bit_depth)\n  when :rgb\n    write_rgb(canvas, deflate, bit_depth)\n  when :grayscale_alpha\n    write_grayscale_alpha(canvas, deflate, bit_depth)\n  when :grayscale\n    write_grayscale(canvas, deflate, bit_depth)\n  end\nend\nio.seek(-((4 + 4) + crc_io.size), IO::Seek::Current)\nio.write_bytes(crc_io.size.to_u32, IO::ByteFormat::BigEndian)\nio.seek(0, IO::Seek::End)\nmulti.write_bytes(crc_io.crc.to_u32, IO::ByteFormat::BigEndian)\nio.write_bytes(0_u32, IO::ByteFormat::BigEndian)\nmulti << \"IEND\"\nmulti.write_bytes(CRC32.checksum(\"IEND\"), IO::ByteFormat::BigEndian)\n"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/stumpycr/stumpy_png/StumpyPNG/Chunk","path":"StumpyPNG/Chunk.html","kind":"class","full_name":"StumpyPNG::Chunk","name":"Chunk","abstract":false,"superclass":{"html_id":"github.com/stumpycr/stumpy_png/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/stumpycr/stumpy_png/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/stumpycr/stumpy_png/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"stumpy_png/chunk.cr","line_number":6,"url":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/chunk.cr"}],"repository_name":"github.com/stumpycr/stumpy_png","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/stumpycr/stumpy_png/StumpyPNG","kind":"module","full_name":"StumpyPNG","name":"StumpyPNG"},"doc":null,"summary":null,"class_methods":[{"id":"parse(slice:Bytes)-class-method","html_id":"parse(slice:Bytes)-class-method","name":"parse","doc":"Parse chunk data **without** size.","summary":"<p>Parse chunk data <strong>without</strong> size.</p>","abstract":false,"args":[{"name":"slice","doc":null,"default_value":"","external_name":"slice","restriction":"Bytes"}],"args_string":"(slice : Bytes)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/chunk.cr#L12","def":{"name":"parse","args":[{"name":"slice","doc":null,"default_value":"","external_name":"slice","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"type = String.new(slice[0, 4])\ncrc = Utils.bytes_to_uint32(slice[slice.size - 4, 4])\ndata = slice[4, slice.size - 8]\nexpected_crc = CRC32.checksum(slice[0, slice.size - 4])\nif crc != expected_crc\n  raise(\"Incorrect checksum\")\nend\nChunk.new(type, data, crc)\n"}}],"constructors":[{"id":"new(type,data,crc:UInt32?=nil)-class-method","html_id":"new(type,data,crc:UInt32?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":""},{"name":"crc","doc":null,"default_value":"nil","external_name":"crc","restriction":"UInt32 | ::Nil"}],"args_string":"(type, data, crc : UInt32? = <span class=\"n\">nil</span>)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/chunk.cr#L23","def":{"name":"new","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":""},{"name":"crc","doc":null,"default_value":"nil","external_name":"crc","restriction":"UInt32 | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(type, data, crc)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"crc:UInt32-instance-method","html_id":"crc:UInt32-instance-method","name":"crc","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt32","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/chunk.cr#L11","def":{"name":"crc","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"@crc"}},{"id":"crc=(crc:UInt32)-instance-method","html_id":"crc=(crc:UInt32)-instance-method","name":"crc=","doc":null,"summary":null,"abstract":false,"args":[{"name":"crc","doc":null,"default_value":"","external_name":"crc","restriction":"UInt32"}],"args_string":"(crc : UInt32)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/chunk.cr#L15","def":{"name":"crc=","args":[{"name":"crc","doc":null,"default_value":"","external_name":"crc","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@crc = crc"}},{"id":"data:Bytes-instance-method","html_id":"data:Bytes-instance-method","name":"data","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bytes","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/chunk.cr#L10","def":{"name":"data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"@data"}},{"id":"data=(data:Bytes)-instance-method","html_id":"data=(data:Bytes)-instance-method","name":"data=","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Bytes"}],"args_string":"(data : Bytes)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/chunk.cr#L14","def":{"name":"data=","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@data = data"}},{"id":"raw:Bytes-instance-method","html_id":"raw:Bytes-instance-method","name":"raw","doc":"Returns chunk data **with** size as a `Bytes`.","summary":"<p>Returns chunk data <strong>with</strong> size as a <code>Bytes</code>.</p>","abstract":false,"args":[],"args_string":" : Bytes","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/chunk.cr#L38","def":{"name":"raw","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"io = IO::Memory.new\nwrite(io)\nio.to_slice\n"}},{"id":"size-instance-method","html_id":"size-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/chunk.cr#L33","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@data.size"}},{"id":"type:String-instance-method","html_id":"type:String-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/chunk.cr#L9","def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@type"}},{"id":"type=(type:String)-instance-method","html_id":"type=(type:String)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"String"}],"args_string":"(type : String)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/chunk.cr#L13","def":{"name":"type=","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@type = type"}},{"id":"write(io:IO)-instance-method","html_id":"write(io:IO)-instance-method","name":"write","doc":"Write chunk data to *io* **with** size.","summary":"<p>Write chunk data to <em>io</em> <strong>with</strong> size.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/chunk.cr#L45","def":{"name":"write","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io.write_bytes(size, IO::ByteFormat::BigEndian)\nio << @type\nio.write(@data)\nio.write_bytes(@crc, IO::ByteFormat::BigEndian)\n"}}],"macros":[],"types":[]},{"html_id":"github.com/stumpycr/stumpy_png/StumpyPNG/Datastream","path":"StumpyPNG/Datastream.html","kind":"class","full_name":"StumpyPNG::Datastream","name":"Datastream","abstract":false,"superclass":{"html_id":"github.com/stumpycr/stumpy_png/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/stumpycr/stumpy_png/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/stumpycr/stumpy_png/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"stumpy_png/datastream.cr","line_number":6,"url":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/datastream.cr"}],"repository_name":"github.com/stumpycr/stumpy_png","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/stumpycr/stumpy_png/StumpyPNG","kind":"module","full_name":"StumpyPNG","name":"StumpyPNG"},"doc":null,"summary":null,"class_methods":[{"id":"read(io:IO)-class-method","html_id":"read(io:IO)-class-method","name":"read","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/datastream.cr#L18","def":{"name":"read","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (io.read_bytes(UInt64, IO::ByteFormat::BigEndian)) == StumpyPNG::HEADER\nelse\n  raise(\"Not a png file\")\nend\nchunks = [] of Chunk\nloop do\n  begin\n    chunk_length = io.read_bytes(UInt32, IO::ByteFormat::BigEndian)\n  rescue IO::EOFError\n    break\n  end\n  chunk_data = Bytes.new((chunk_length + 4) + 4)\n  io.read_fully(chunk_data)\n  chunks << (Chunk.parse(chunk_data))\nend\nDatastream.new(chunks)\n"}},{"id":"read(path)-class-method","html_id":"read(path)-class-method","name":"read","doc":null,"summary":null,"abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"args_string":"(path)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/datastream.cr#L12","def":{"name":"read","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"File.open(path) do |file|\n  read(file)\nend"}}],"constructors":[{"id":"new(chunks=[]ofChunk)-class-method","html_id":"new(chunks=[]ofChunk)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"chunks","doc":null,"default_value":"[] of Chunk","external_name":"chunks","restriction":""}],"args_string":"(chunks = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Chunk</span>)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/datastream.cr#L9","def":{"name":"new","args":[{"name":"chunks","doc":null,"default_value":"[] of Chunk","external_name":"chunks","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(chunks)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"chunks:Array(Chunk)-instance-method","html_id":"chunks:Array(Chunk)-instance-method","name":"chunks","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Chunk)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/datastream.cr#L9","def":{"name":"chunks","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Chunk)","visibility":"Public","body":"@chunks"}},{"id":"chunks=(chunks:Array(Chunk))-instance-method","html_id":"chunks=(chunks:Array(Chunk))-instance-method","name":"chunks=","doc":null,"summary":null,"abstract":false,"args":[{"name":"chunks","doc":null,"default_value":"","external_name":"chunks","restriction":"Array(Chunk)"}],"args_string":"(chunks : Array(Chunk))","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/datastream.cr#L13","def":{"name":"chunks=","args":[{"name":"chunks","doc":null,"default_value":"","external_name":"chunks","restriction":"Array(Chunk)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@chunks = chunks"}},{"id":"raw:Bytes-instance-method","html_id":"raw:Bytes-instance-method","name":"raw","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bytes","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/datastream.cr#L39","def":{"name":"raw","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"io = IO::Memory.new\nwrite(io)\nio.to_slice\n"}},{"id":"write(path:String)-instance-method","html_id":"write(path:String)-instance-method","name":"write","doc":null,"summary":null,"abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"args_string":"(path : String)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/datastream.cr#L45","def":{"name":"write","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"File.open(path, \"w\") do |file|\n  write(file)\nend"}},{"id":"write(io:IO)-instance-method","html_id":"write(io:IO)-instance-method","name":"write","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/datastream.cr#L51","def":{"name":"write","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io.write_bytes(StumpyPNG::HEADER, IO::ByteFormat::BigEndian)\n@chunks.each do |chunk|\n  chunk.write(io)\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/stumpycr/stumpy_png/StumpyPNG/Filter","path":"StumpyPNG/Filter.html","kind":"module","full_name":"StumpyPNG::Filter","name":"Filter","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"stumpy_png/filters.cr","line_number":2,"url":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/filters.cr"}],"repository_name":"github.com/stumpycr/stumpy_png","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/stumpycr/stumpy_png/StumpyPNG","kind":"module","full_name":"StumpyPNG","name":"StumpyPNG"},"doc":null,"summary":null,"class_methods":[{"id":"apply(scanline:Bytes,prior_scanline:Bytes,decoded:Bytes,bpp,filter):Bytes-class-method","html_id":"apply(scanline:Bytes,prior_scanline:Bytes,decoded:Bytes,bpp,filter):Bytes-class-method","name":"apply","doc":null,"summary":null,"abstract":false,"args":[{"name":"scanline","doc":null,"default_value":"","external_name":"scanline","restriction":"Bytes"},{"name":"prior_scanline","doc":null,"default_value":"","external_name":"prior_scanline","restriction":"Bytes"},{"name":"decoded","doc":null,"default_value":"","external_name":"decoded","restriction":"Bytes"},{"name":"bpp","doc":null,"default_value":"","external_name":"bpp","restriction":""},{"name":"filter","doc":null,"default_value":"","external_name":"filter","restriction":""}],"args_string":"(scanline : Bytes, prior_scanline : Bytes, decoded : Bytes, bpp, filter) : Bytes","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/filters.cr#L3","def":{"name":"apply","args":[{"name":"scanline","doc":null,"default_value":"","external_name":"scanline","restriction":"Bytes"},{"name":"prior_scanline","doc":null,"default_value":"","external_name":"prior_scanline","restriction":"Bytes"},{"name":"decoded","doc":null,"default_value":"","external_name":"decoded","restriction":"Bytes"},{"name":"bpp","doc":null,"default_value":"","external_name":"bpp","restriction":""},{"name":"filter","doc":null,"default_value":"","external_name":"filter","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"case filter\nwhen 0\n  return scanline\nwhen 1\n  scanline.each_with_index do |byte, index|\n    prior = (index - bpp) < 0 ? 0 : decoded[index - bpp]\n    decoded[index] = byte + prior\n  end\nwhen 2\n  scanline.each_with_index do |byte, index|\n    above = prior_scanline[index]\n    decoded[index] = byte + above\n  end\nwhen 3\n  scanline.each_with_index do |byte, index|\n    prior = (index - bpp) < 0 ? 0 : decoded[index - bpp]\n    above = prior_scanline[index]\n    decoded[index] = byte + ((prior.to_f + above.to_f) / 2).floor.to_u8\n  end\nwhen 4\n  scanline.each_with_index do |byte, index|\n    prior = (index - bpp) < 0 ? 0 : decoded[index - bpp]\n    above = prior_scanline[index]\n    upper_left = (index - bpp) < 0 ? 0 : prior_scanline[index - bpp]\n    decoded[index] = byte + (Utils.paeth_predictor(prior, above, upper_left))\n  end\nelse\n  raise(\"Unknown filter type #{filter}\")\nend\ndecoded\n"}},{"id":"apply(scanline:Bytes,prior_scanline:Nil,decoded:Bytes,bpp,filter):Bytes-class-method","html_id":"apply(scanline:Bytes,prior_scanline:Nil,decoded:Bytes,bpp,filter):Bytes-class-method","name":"apply","doc":null,"summary":null,"abstract":false,"args":[{"name":"scanline","doc":null,"default_value":"","external_name":"scanline","restriction":"Bytes"},{"name":"prior_scanline","doc":null,"default_value":"","external_name":"prior_scanline","restriction":"Nil"},{"name":"decoded","doc":null,"default_value":"","external_name":"decoded","restriction":"Bytes"},{"name":"bpp","doc":null,"default_value":"","external_name":"bpp","restriction":""},{"name":"filter","doc":null,"default_value":"","external_name":"filter","restriction":""}],"args_string":"(scanline : Bytes, prior_scanline : Nil, decoded : Bytes, bpp, filter) : Bytes","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/filters.cr#L37","def":{"name":"apply","args":[{"name":"scanline","doc":null,"default_value":"","external_name":"scanline","restriction":"Bytes"},{"name":"prior_scanline","doc":null,"default_value":"","external_name":"prior_scanline","restriction":"Nil"},{"name":"decoded","doc":null,"default_value":"","external_name":"decoded","restriction":"Bytes"},{"name":"bpp","doc":null,"default_value":"","external_name":"bpp","restriction":""},{"name":"filter","doc":null,"default_value":"","external_name":"filter","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"case filter\nwhen 0\n  return scanline\nwhen 1\n  scanline.each_with_index do |byte, index|\n    prior = (index - bpp) < 0 ? 0 : decoded[index - bpp]\n    decoded[index] = byte + prior\n  end\nwhen 2\n  scanline.each_with_index do |byte, index|\n    decoded[index] = byte\n  end\nwhen 3\n  scanline.each_with_index do |byte, index|\n    prior = (index - bpp) < 0 ? 0 : decoded[index - bpp]\n    decoded[index] = byte + (prior.to_f / 2).floor.to_u8\n  end\nwhen 4\n  scanline.each_with_index do |byte, index|\n    prior = (index - bpp) < 0 ? 0 : decoded[index - bpp]\n    decoded[index] = byte + (Utils.paeth_predictor(prior, 0, 0))\n  end\nelse\n  raise(\"Unknown filter type #{filter}\")\nend\ndecoded\n"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/stumpycr/stumpy_png/StumpyPNG/PNG","path":"StumpyPNG/PNG.html","kind":"class","full_name":"StumpyPNG::PNG","name":"PNG","abstract":false,"superclass":{"html_id":"github.com/stumpycr/stumpy_png/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/stumpycr/stumpy_png/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/stumpycr/stumpy_png/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"stumpy_png/png.cr","line_number":7,"url":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/png.cr"}],"repository_name":"github.com/stumpycr/stumpy_png","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"COLOR_TYPES","name":"COLOR_TYPES","value":"{0 => {:grayscale, {1, 2, 4, 8, 16}, 1}, 2 => {:rgb, {8, 16}, 3}, 3 => {:palette, {1, 2, 4, 8}, 1}, 4 => {:grayscale_alpha, {8, 16}, 2}, 6 => {:rgb_alpha, {8, 16}, 4}}","doc":"{ name, valid bit depths, \"fields\" per pixel }","summary":"<p>{ name, valid bit depths, \"fields\" per pixel }</p>"},{"id":"INTERLACE_METHODS","name":"INTERLACE_METHODS","value":"{0 => :no_interlace, 1 => :adam7}","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/stumpycr/stumpy_png/StumpyPNG","kind":"module","full_name":"StumpyPNG","name":"StumpyPNG"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/png.cr#L27","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"bit_depth:UInt8-instance-method","html_id":"bit_depth:UInt8-instance-method","name":"bit_depth","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt8","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/png.cr#L23","def":{"name":"bit_depth","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@bit_depth"}},{"id":"canvas:Canvas-instance-method","html_id":"canvas:Canvas-instance-method","name":"canvas","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Canvas","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/png.cr#L27","def":{"name":"canvas","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Canvas","visibility":"Public","body":"@canvas"}},{"id":"color_type:UInt8-instance-method","html_id":"color_type:UInt8-instance-method","name":"color_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt8","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/png.cr#L23","def":{"name":"color_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@color_type"}},{"id":"compression_method:UInt8-instance-method","html_id":"compression_method:UInt8-instance-method","name":"compression_method","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt8","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/png.cr#L23","def":{"name":"compression_method","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@compression_method"}},{"id":"data:Slice(UInt8)-instance-method","html_id":"data:Slice(UInt8)-instance-method","name":"data","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Slice(UInt8)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/png.cr#L24","def":{"name":"data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@data"}},{"id":"filter_method:UInt8-instance-method","html_id":"filter_method:UInt8-instance-method","name":"filter_method","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt8","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/png.cr#L23","def":{"name":"filter_method","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@filter_method"}},{"id":"height:Int32-instance-method","html_id":"height:Int32-instance-method","name":"height","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/png.cr#L24","def":{"name":"height","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@height"}},{"id":"interlace_method:UInt8-instance-method","html_id":"interlace_method:UInt8-instance-method","name":"interlace_method","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt8","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/png.cr#L23","def":{"name":"interlace_method","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@interlace_method"}},{"id":"palette:Array(StumpyCore::RGBA)-instance-method","html_id":"palette:Array(StumpyCore::RGBA)-instance-method","name":"palette","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(StumpyCore::RGBA)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/png.cr#L23","def":{"name":"palette","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@palette"}},{"id":"parse_chunk(chunk)-instance-method","html_id":"parse_chunk(chunk)-instance-method","name":"parse_chunk","doc":null,"summary":null,"abstract":false,"args":[{"name":"chunk","doc":null,"default_value":"","external_name":"chunk","restriction":""}],"args_string":"(chunk)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/png.cr#L214","def":{"name":"parse_chunk","args":[{"name":"chunk","doc":null,"default_value":"","external_name":"chunk","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case chunk.type\nwhen \"IHDR\"\n  parse_IHDR(chunk)\nwhen \"PLTE\"\n  parse_PLTE(chunk)\nwhen \"IDAT\"\n  parse_IDAT(chunk)\nwhen \"IEND\"\n  parse_IEND(chunk)\nend"}},{"id":"parse_IDAT(chunk:Chunk)-instance-method","html_id":"parse_IDAT(chunk:Chunk)-instance-method","name":"parse_IDAT","doc":null,"summary":null,"abstract":false,"args":[{"name":"chunk","doc":null,"default_value":"","external_name":"chunk","restriction":"Chunk"}],"args_string":"(chunk : Chunk)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/png.cr#L70","def":{"name":"parse_IDAT","args":[{"name":"chunk","doc":null,"default_value":"","external_name":"chunk","restriction":"Chunk"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@idat_count = @idat_count + 1\n@idat_buffer.write(chunk.data)\n"}},{"id":"parse_IEND(chunk:Chunk)-instance-method","html_id":"parse_IEND(chunk:Chunk)-instance-method","name":"parse_IEND","doc":null,"summary":null,"abstract":false,"args":[{"name":"chunk","doc":null,"default_value":"","external_name":"chunk","restriction":"Chunk"}],"args_string":"(chunk : Chunk)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/png.cr#L49","def":{"name":"parse_IEND","args":[{"name":"chunk","doc":null,"default_value":"","external_name":"chunk","restriction":"Chunk"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @idat_count == 0\n  raise(\"Missing IDAT chunk\")\nend\n@idat_buffer.pos = 0\ncontents = Zlib::Reader.open(@idat_buffer) do |inflate|\n  io = IO::Memory.new\n  IO.copy(inflate, io)\n  @data = io.to_slice\nend\nparsed = true\nif @interlace_method == 0\n  @canvas = to_canvas_none\nelse\n  @canvas = to_canvas_adam7\nend\n"}},{"id":"parse_IHDR(chunk:Chunk)-instance-method","html_id":"parse_IHDR(chunk:Chunk)-instance-method","name":"parse_IHDR","doc":null,"summary":null,"abstract":false,"args":[{"name":"chunk","doc":null,"default_value":"","external_name":"chunk","restriction":"Chunk"}],"args_string":"(chunk : Chunk)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/png.cr#L80","def":{"name":"parse_IHDR","args":[{"name":"chunk","doc":null,"default_value":"","external_name":"chunk","restriction":"Chunk"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@width = Utils.parse_integer(chunk.data[0, 4])\n@height = Utils.parse_integer(chunk.data[4, 4])\n@bit_depth = chunk.data[8]\n@color_type = chunk.data[9]\nif COLOR_TYPES.has_key?(@color_type)\nelse\n  raise(\"Invalid color type\")\nend\nif COLOR_TYPES[@color_type][1].includes?(@bit_depth)\nelse\n  raise(\"Invalid bit depth for this color type\")\nend\n@compression_method = chunk.data[10]\nif compression_method == 0\nelse\n  raise(\"Invalid compression method\")\nend\n@filter_method = chunk.data[11]\nif filter_method == 0\nelse\n  raise(\"Invalid filter method\")\nend\n@interlace_method = chunk.data[12]\nif INTERLACE_METHODS.has_key?(interlace_method)\nelse\n  raise(\"Invalid interlace method\")\nend\n"}},{"id":"parse_PLTE(chunk:Chunk)-instance-method","html_id":"parse_PLTE(chunk:Chunk)-instance-method","name":"parse_PLTE","doc":null,"summary":null,"abstract":false,"args":[{"name":"chunk","doc":null,"default_value":"","external_name":"chunk","restriction":"Chunk"}],"args_string":"(chunk : Chunk)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/png.cr#L75","def":{"name":"parse_PLTE","args":[{"name":"chunk","doc":null,"default_value":"","external_name":"chunk","restriction":"Chunk"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (chunk.size % 3) == 0\nelse\n  raise(\"Invalid palette length\")\nend\n@palette = (chunk.data.each_slice(3)).map do |rgb|\n  RGBA.from_rgb_n(rgb, 8)\nend.to_a\n"}},{"id":"parsed:Bool-instance-method","html_id":"parsed:Bool-instance-method","name":"parsed","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/png.cr#L24","def":{"name":"parsed","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@parsed"}},{"id":"to_canvas_adam7-instance-method","html_id":"to_canvas_adam7-instance-method","name":"to_canvas_adam7","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/png.cr#L139","def":{"name":"to_canvas_adam7","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"starting_row = {0, 0, 4, 0, 2, 0, 1}\nstarting_col = {0, 4, 0, 2, 0, 1, 0}\nrow_increment = {8, 8, 8, 4, 4, 2, 2}\ncol_increment = {8, 8, 4, 4, 2, 2, 1}\npass = 0\nrow = 0\ncol = 0\ndata_pos = 0\ncanvas = Canvas.new(@width, @height)\nbpp = (({8, @bit_depth}.max / 8) * COLOR_TYPES[@color_type][2]).to_i32\nwhile pass < 7\n  prior_scanline = nil\n  row = starting_row[pass]\n  scanline_width_ = {0, ((@width - starting_col[pass]).to_f / col_increment[pass]).ceil}.max\n  scanline_width = (((@bit_depth.to_f / 8) * COLOR_TYPES[@color_type][2]) * scanline_width_).ceil.to_i32\n  if scanline_width_ == 0\n    pass = pass + 1\n    next\n  end\n  decoded = Bytes.new(scanline_width)\n  line_start = 0\n  while row < @height\n    filter = @data[data_pos]\n    scanline = @data[data_pos + 1, scanline_width]\n    decoded = Filter.apply(scanline, prior_scanline, decoded, bpp, filter)\n    data_pos = data_pos + (scanline_width + 1)\n    col = starting_col[pass]\n    increment = col_increment[pass]\n    line_width = scanline_width_.to_i32\n    line_canvas = Canvas.new(line_width, 1)\n    case color_type\n    when 0\n      Scanline.decode_grayscale(decoded, line_canvas, 0, bit_depth)\n    when 4\n      Scanline.decode_grayscale_alpha(decoded, line_canvas, 0, bit_depth)\n    when 2\n      Scanline.decode_rgb(decoded, line_canvas, 0, bit_depth)\n    when 6\n      Scanline.decode_rgb_alpha(decoded, line_canvas, 0, bit_depth)\n    when 3\n      Scanline.decode_palette(decoded, line_canvas, 0, palette, bit_depth)\n    end\n    (0...line_width).each do |x|\n      canvas[col, row] = line_canvas[x, 0]\n      col = col + col_increment[pass]\n    end\n    row = row + row_increment[pass]\n    if prior_scanline\n      prior_scanline, decoded = decoded, prior_scanline\n    else\n      prior_scanline = decoded\n      decoded = Bytes.new(scanline_width)\n    end\n  end\n  pass = pass + 1\nend\ncanvas\n"}},{"id":"to_canvas_none-instance-method","html_id":"to_canvas_none-instance-method","name":"to_canvas_none","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/png.cr#L103","def":{"name":"to_canvas_none","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"canvas = Canvas.new(@width, @height)\nbpp = (({8, @bit_depth}.max / 8) * COLOR_TYPES[@color_type][2]).to_i32\nscanline_width = (((@bit_depth.to_f / 8) * COLOR_TYPES[@color_type][2]) * @width).ceil.to_i32\nprior_scanline = nil\ndecoded = Bytes.new(scanline_width)\ndata_pos = 0\n@height.times do |y|\n  filter = @data[data_pos]\n  scanline = @data[data_pos + 1, scanline_width]\n  decoded = Filter.apply(scanline, prior_scanline, decoded, bpp, filter)\n  data_pos = data_pos + (scanline_width + 1)\n  case color_type\n  when 0\n    Scanline.decode_grayscale(decoded, canvas, y, bit_depth)\n  when 4\n    Scanline.decode_grayscale_alpha(decoded, canvas, y, bit_depth)\n  when 2\n    Scanline.decode_rgb(decoded, canvas, y, bit_depth)\n  when 6\n    Scanline.decode_rgb_alpha(decoded, canvas, y, bit_depth)\n  when 3\n    Scanline.decode_palette(decoded, canvas, y, palette, bit_depth)\n  end\n  if prior_scanline\n    prior_scanline, decoded = decoded, prior_scanline\n  else\n    prior_scanline = decoded\n    decoded = Bytes.new(scanline_width)\n  end\nend\ncanvas\n"}},{"id":"width:Int32-instance-method","html_id":"width:Int32-instance-method","name":"width","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/png.cr#L24","def":{"name":"width","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@width"}}],"macros":[],"types":[]},{"html_id":"github.com/stumpycr/stumpy_png/StumpyPNG/Scanline","path":"StumpyPNG/Scanline.html","kind":"module","full_name":"StumpyPNG::Scanline","name":"Scanline","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"stumpy_png/scanline.cr","line_number":2,"url":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/scanline.cr"}],"repository_name":"github.com/stumpycr/stumpy_png","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/stumpycr/stumpy_png/StumpyPNG","kind":"module","full_name":"StumpyPNG","name":"StumpyPNG"},"doc":null,"summary":null,"class_methods":[{"id":"decode_grayscale(scanline,canvas,y,bit_depth)-class-method","html_id":"decode_grayscale(scanline,canvas,y,bit_depth)-class-method","name":"decode_grayscale","doc":"We don't need to care about invalid bit depths here,\nbecause they are validated before","summary":"<p>We don't need to care about invalid bit depths here, because they are validated before</p>","abstract":false,"args":[{"name":"scanline","doc":null,"default_value":"","external_name":"scanline","restriction":""},{"name":"canvas","doc":null,"default_value":"","external_name":"canvas","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""},{"name":"bit_depth","doc":null,"default_value":"","external_name":"bit_depth","restriction":""}],"args_string":"(scanline, canvas, y, bit_depth)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/scanline.cr#L5","def":{"name":"decode_grayscale","args":[{"name":"scanline","doc":null,"default_value":"","external_name":"scanline","restriction":""},{"name":"canvas","doc":null,"default_value":"","external_name":"canvas","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""},{"name":"bit_depth","doc":null,"default_value":"","external_name":"bit_depth","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case bit_depth\nwhen 1\n  Scanline.decode_grayscale_1(scanline, canvas, y)\nwhen 2\n  Scanline.decode_grayscale_2(scanline, canvas, y)\nwhen 4\n  Scanline.decode_grayscale_4(scanline, canvas, y)\nwhen 8\n  Scanline.decode_grayscale_8(scanline, canvas, y)\nwhen 16\n  Scanline.decode_grayscale_16(scanline, canvas, y)\nend"}},{"id":"decode_grayscale_1(scanline,canvas,y)-class-method","html_id":"decode_grayscale_1(scanline,canvas,y)-class-method","name":"decode_grayscale_1","doc":null,"summary":null,"abstract":false,"args":[{"name":"scanline","doc":null,"default_value":"","external_name":"scanline","restriction":""},{"name":"canvas","doc":null,"default_value":"","external_name":"canvas","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""}],"args_string":"(scanline, canvas, y)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/scanline.cr#L48","def":{"name":"decode_grayscale_1","args":[{"name":"scanline","doc":null,"default_value":"","external_name":"scanline","restriction":""},{"name":"canvas","doc":null,"default_value":"","external_name":"canvas","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((0...canvas.width).step(8)).each do |x|\n  byte = scanline[x / 8]\n  (0...8).each do |x2|\n    if (x + x2) >= canvas.width\n      break\n    end\n    gray = (byte >> 7) == 0 ? 0_u16 : 65535_u16\n    byte = byte << 1\n    canvas[x + x2, y] = RGBA.new(gray)\n  end\nend"}},{"id":"decode_grayscale_16(scanline,canvas,y)-class-method","html_id":"decode_grayscale_16(scanline,canvas,y)-class-method","name":"decode_grayscale_16","doc":null,"summary":null,"abstract":false,"args":[{"name":"scanline","doc":null,"default_value":"","external_name":"scanline","restriction":""},{"name":"canvas","doc":null,"default_value":"","external_name":"canvas","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""}],"args_string":"(scanline, canvas, y)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/scanline.cr#L104","def":{"name":"decode_grayscale_16","args":[{"name":"scanline","doc":null,"default_value":"","external_name":"scanline","restriction":""},{"name":"canvas","doc":null,"default_value":"","external_name":"canvas","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(0...canvas.width).each do |x|\n  gray = (scanline[2 * x].to_u16 << 8) + scanline[(2 * x) + 1]\n  canvas[x, y] = RGBA.new(gray)\nend"}},{"id":"decode_grayscale_2(scanline,canvas,y)-class-method","html_id":"decode_grayscale_2(scanline,canvas,y)-class-method","name":"decode_grayscale_2","doc":null,"summary":null,"abstract":false,"args":[{"name":"scanline","doc":null,"default_value":"","external_name":"scanline","restriction":""},{"name":"canvas","doc":null,"default_value":"","external_name":"canvas","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""}],"args_string":"(scanline, canvas, y)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/scanline.cr#L63","def":{"name":"decode_grayscale_2","args":[{"name":"scanline","doc":null,"default_value":"","external_name":"scanline","restriction":""},{"name":"canvas","doc":null,"default_value":"","external_name":"canvas","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((0...canvas.width).step(4)).each do |x|\n  byte = scanline[x / 4]\n  (0...4).each do |x2|\n    if (x + x2) >= canvas.width\n      break\n    end\n    gray = (byte >> 6).to_u16\n    gray = gray + (gray << 2)\n    gray = gray + (gray << 4)\n    gray = gray + (gray << 8)\n    byte = byte << 2\n    canvas[x + x2, y] = RGBA.new(gray)\n  end\nend"}},{"id":"decode_grayscale_4(scanline,canvas,y)-class-method","html_id":"decode_grayscale_4(scanline,canvas,y)-class-method","name":"decode_grayscale_4","doc":null,"summary":null,"abstract":false,"args":[{"name":"scanline","doc":null,"default_value":"","external_name":"scanline","restriction":""},{"name":"canvas","doc":null,"default_value":"","external_name":"canvas","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""}],"args_string":"(scanline, canvas, y)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/scanline.cr#L80","def":{"name":"decode_grayscale_4","args":[{"name":"scanline","doc":null,"default_value":"","external_name":"scanline","restriction":""},{"name":"canvas","doc":null,"default_value":"","external_name":"canvas","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((0...canvas.width).step(2)).each do |x|\n  byte = scanline[x / 2]\n  (0...2).each do |x2|\n    if (x + x2) >= canvas.width\n      break\n    end\n    gray = (byte >> 4).to_u16\n    gray = gray + (gray << 4)\n    gray = gray + (gray << 8)\n    byte = byte << 4\n    canvas[x + x2, y] = RGBA.new(gray)\n  end\nend"}},{"id":"decode_grayscale_8(scanline,canvas,y)-class-method","html_id":"decode_grayscale_8(scanline,canvas,y)-class-method","name":"decode_grayscale_8","doc":null,"summary":null,"abstract":false,"args":[{"name":"scanline","doc":null,"default_value":"","external_name":"scanline","restriction":""},{"name":"canvas","doc":null,"default_value":"","external_name":"canvas","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""}],"args_string":"(scanline, canvas, y)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/scanline.cr#L96","def":{"name":"decode_grayscale_8","args":[{"name":"scanline","doc":null,"default_value":"","external_name":"scanline","restriction":""},{"name":"canvas","doc":null,"default_value":"","external_name":"canvas","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(0...canvas.width).each do |x|\n  gray = scanline[x].to_u16\n  gray = gray + (gray << 8)\n  canvas[x, y] = RGBA.new(gray)\nend"}},{"id":"decode_grayscale_alpha(scanline,canvas,y,bit_depth)-class-method","html_id":"decode_grayscale_alpha(scanline,canvas,y,bit_depth)-class-method","name":"decode_grayscale_alpha","doc":null,"summary":null,"abstract":false,"args":[{"name":"scanline","doc":null,"default_value":"","external_name":"scanline","restriction":""},{"name":"canvas","doc":null,"default_value":"","external_name":"canvas","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""},{"name":"bit_depth","doc":null,"default_value":"","external_name":"bit_depth","restriction":""}],"args_string":"(scanline, canvas, y, bit_depth)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/scanline.cr#L15","def":{"name":"decode_grayscale_alpha","args":[{"name":"scanline","doc":null,"default_value":"","external_name":"scanline","restriction":""},{"name":"canvas","doc":null,"default_value":"","external_name":"canvas","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""},{"name":"bit_depth","doc":null,"default_value":"","external_name":"bit_depth","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if bit_depth == 8\n  Scanline.decode_grayscale_alpha_8(scanline, canvas, y)\nelse\n  Scanline.decode_grayscale_alpha_16(scanline, canvas, y)\nend"}},{"id":"decode_grayscale_alpha_16(scanline,canvas,y)-class-method","html_id":"decode_grayscale_alpha_16(scanline,canvas,y)-class-method","name":"decode_grayscale_alpha_16","doc":null,"summary":null,"abstract":false,"args":[{"name":"scanline","doc":null,"default_value":"","external_name":"scanline","restriction":""},{"name":"canvas","doc":null,"default_value":"","external_name":"canvas","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""}],"args_string":"(scanline, canvas, y)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/scanline.cr#L124","def":{"name":"decode_grayscale_alpha_16","args":[{"name":"scanline","doc":null,"default_value":"","external_name":"scanline","restriction":""},{"name":"canvas","doc":null,"default_value":"","external_name":"canvas","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(0...canvas.width).each do |x|\n  start = 4 * x\n  gray = (scanline[start].to_u16 << 8) + scanline[start + 1]\n  alpha = (scanline[start + 2].to_u16 << 8) + scanline[start + 3]\n  canvas[x, y] = RGBA.new(gray, alpha)\nend"}},{"id":"decode_grayscale_alpha_8(scanline,canvas,y)-class-method","html_id":"decode_grayscale_alpha_8(scanline,canvas,y)-class-method","name":"decode_grayscale_alpha_8","doc":null,"summary":null,"abstract":false,"args":[{"name":"scanline","doc":null,"default_value":"","external_name":"scanline","restriction":""},{"name":"canvas","doc":null,"default_value":"","external_name":"canvas","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""}],"args_string":"(scanline, canvas, y)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/scanline.cr#L111","def":{"name":"decode_grayscale_alpha_8","args":[{"name":"scanline","doc":null,"default_value":"","external_name":"scanline","restriction":""},{"name":"canvas","doc":null,"default_value":"","external_name":"canvas","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(0...canvas.width).each do |x|\n  start = 2 * x\n  gray = scanline[start].to_u16\n  gray = gray + (gray << 8)\n  alpha = scanline[start + 1].to_u16\n  alpha = alpha + (alpha << 8)\n  color = RGBA.new(gray, alpha)\n  canvas[x, y] = color\nend"}},{"id":"decode_palette(scanline,canvas,y,palette,bit_depth)-class-method","html_id":"decode_palette(scanline,canvas,y,palette,bit_depth)-class-method","name":"decode_palette","doc":null,"summary":null,"abstract":false,"args":[{"name":"scanline","doc":null,"default_value":"","external_name":"scanline","restriction":""},{"name":"canvas","doc":null,"default_value":"","external_name":"canvas","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""},{"name":"palette","doc":null,"default_value":"","external_name":"palette","restriction":""},{"name":"bit_depth","doc":null,"default_value":"","external_name":"bit_depth","restriction":""}],"args_string":"(scanline, canvas, y, palette, bit_depth)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/scanline.cr#L39","def":{"name":"decode_palette","args":[{"name":"scanline","doc":null,"default_value":"","external_name":"scanline","restriction":""},{"name":"canvas","doc":null,"default_value":"","external_name":"canvas","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""},{"name":"palette","doc":null,"default_value":"","external_name":"palette","restriction":""},{"name":"bit_depth","doc":null,"default_value":"","external_name":"bit_depth","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case bit_depth\nwhen 1\n  Scanline.decode_palette_1(scanline, canvas, y, palette)\nwhen 2\n  Scanline.decode_palette_2(scanline, canvas, y, palette)\nwhen 4\n  Scanline.decode_palette_4(scanline, canvas, y, palette)\nwhen 8\n  Scanline.decode_palette_8(scanline, canvas, y, palette)\nend"}},{"id":"decode_palette_1(scanline,canvas,y,palette)-class-method","html_id":"decode_palette_1(scanline,canvas,y,palette)-class-method","name":"decode_palette_1","doc":null,"summary":null,"abstract":false,"args":[{"name":"scanline","doc":null,"default_value":"","external_name":"scanline","restriction":""},{"name":"canvas","doc":null,"default_value":"","external_name":"canvas","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""},{"name":"palette","doc":null,"default_value":"","external_name":"palette","restriction":""}],"args_string":"(scanline, canvas, y, palette)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/scanline.cr#L182","def":{"name":"decode_palette_1","args":[{"name":"scanline","doc":null,"default_value":"","external_name":"scanline","restriction":""},{"name":"canvas","doc":null,"default_value":"","external_name":"canvas","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""},{"name":"palette","doc":null,"default_value":"","external_name":"palette","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((0...canvas.width).step(8)).each do |x|\n  byte = scanline[x / 8]\n  (0...8).each do |x2|\n    if (x + x2) >= canvas.width\n      break\n    end\n    canvas[x + x2, y] = palette[byte >> 7]\n    byte = byte << 1\n  end\nend"}},{"id":"decode_palette_2(scanline,canvas,y,palette)-class-method","html_id":"decode_palette_2(scanline,canvas,y,palette)-class-method","name":"decode_palette_2","doc":null,"summary":null,"abstract":false,"args":[{"name":"scanline","doc":null,"default_value":"","external_name":"scanline","restriction":""},{"name":"canvas","doc":null,"default_value":"","external_name":"canvas","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""},{"name":"palette","doc":null,"default_value":"","external_name":"palette","restriction":""}],"args_string":"(scanline, canvas, y, palette)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/scanline.cr#L194","def":{"name":"decode_palette_2","args":[{"name":"scanline","doc":null,"default_value":"","external_name":"scanline","restriction":""},{"name":"canvas","doc":null,"default_value":"","external_name":"canvas","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""},{"name":"palette","doc":null,"default_value":"","external_name":"palette","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((0...canvas.width).step(4)).each do |x|\n  byte = scanline[x / 4]\n  (0...4).each do |x2|\n    if (x + x2) >= canvas.width\n      break\n    end\n    canvas[x + x2, y] = palette[byte >> 6]\n    byte = byte << 2\n  end\nend"}},{"id":"decode_palette_4(scanline,canvas,y,palette)-class-method","html_id":"decode_palette_4(scanline,canvas,y,palette)-class-method","name":"decode_palette_4","doc":null,"summary":null,"abstract":false,"args":[{"name":"scanline","doc":null,"default_value":"","external_name":"scanline","restriction":""},{"name":"canvas","doc":null,"default_value":"","external_name":"canvas","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""},{"name":"palette","doc":null,"default_value":"","external_name":"palette","restriction":""}],"args_string":"(scanline, canvas, y, palette)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/scanline.cr#L206","def":{"name":"decode_palette_4","args":[{"name":"scanline","doc":null,"default_value":"","external_name":"scanline","restriction":""},{"name":"canvas","doc":null,"default_value":"","external_name":"canvas","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""},{"name":"palette","doc":null,"default_value":"","external_name":"palette","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((0...canvas.width).step(2)).each do |x|\n  byte = scanline[x / 2]\n  (0...2).each do |x2|\n    if (x + x2) >= canvas.width\n      break\n    end\n    canvas[x + x2, y] = palette[byte >> 4]\n    byte = byte << 4\n  end\nend"}},{"id":"decode_palette_8(scanline,canvas,y,palette)-class-method","html_id":"decode_palette_8(scanline,canvas,y,palette)-class-method","name":"decode_palette_8","doc":null,"summary":null,"abstract":false,"args":[{"name":"scanline","doc":null,"default_value":"","external_name":"scanline","restriction":""},{"name":"canvas","doc":null,"default_value":"","external_name":"canvas","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""},{"name":"palette","doc":null,"default_value":"","external_name":"palette","restriction":""}],"args_string":"(scanline, canvas, y, palette)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/scanline.cr#L218","def":{"name":"decode_palette_8","args":[{"name":"scanline","doc":null,"default_value":"","external_name":"scanline","restriction":""},{"name":"canvas","doc":null,"default_value":"","external_name":"canvas","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""},{"name":"palette","doc":null,"default_value":"","external_name":"palette","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(0...canvas.width).each do |x|\n  byte = scanline[x]\n  canvas[x, y] = palette[byte]\nend"}},{"id":"decode_rgb(scanline,canvas,y,bit_depth)-class-method","html_id":"decode_rgb(scanline,canvas,y,bit_depth)-class-method","name":"decode_rgb","doc":null,"summary":null,"abstract":false,"args":[{"name":"scanline","doc":null,"default_value":"","external_name":"scanline","restriction":""},{"name":"canvas","doc":null,"default_value":"","external_name":"canvas","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""},{"name":"bit_depth","doc":null,"default_value":"","external_name":"bit_depth","restriction":""}],"args_string":"(scanline, canvas, y, bit_depth)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/scanline.cr#L23","def":{"name":"decode_rgb","args":[{"name":"scanline","doc":null,"default_value":"","external_name":"scanline","restriction":""},{"name":"canvas","doc":null,"default_value":"","external_name":"canvas","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""},{"name":"bit_depth","doc":null,"default_value":"","external_name":"bit_depth","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if bit_depth == 8\n  Scanline.decode_rgb_8(scanline, canvas, y)\nelse\n  Scanline.decode_rgb_16(scanline, canvas, y)\nend"}},{"id":"decode_rgb_16(scanline,canvas,y)-class-method","html_id":"decode_rgb_16(scanline,canvas,y)-class-method","name":"decode_rgb_16","doc":null,"summary":null,"abstract":false,"args":[{"name":"scanline","doc":null,"default_value":"","external_name":"scanline","restriction":""},{"name":"canvas","doc":null,"default_value":"","external_name":"canvas","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""}],"args_string":"(scanline, canvas, y)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/scanline.cr#L147","def":{"name":"decode_rgb_16","args":[{"name":"scanline","doc":null,"default_value":"","external_name":"scanline","restriction":""},{"name":"canvas","doc":null,"default_value":"","external_name":"canvas","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(0...canvas.width).each do |x|\n  start = x * 6\n  red = (scanline[start].to_u16 << 8) + scanline[start + 1]\n  green = (scanline[start + 2].to_u16 << 8) + scanline[start + 3]\n  blue = (scanline[start + 4].to_u16 << 8) + scanline[start + 5]\n  canvas[x, y] = RGBA.new(red, green, blue)\nend"}},{"id":"decode_rgb_8(scanline,canvas,y)-class-method","html_id":"decode_rgb_8(scanline,canvas,y)-class-method","name":"decode_rgb_8","doc":null,"summary":null,"abstract":false,"args":[{"name":"scanline","doc":null,"default_value":"","external_name":"scanline","restriction":""},{"name":"canvas","doc":null,"default_value":"","external_name":"canvas","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""}],"args_string":"(scanline, canvas, y)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/scanline.cr#L133","def":{"name":"decode_rgb_8","args":[{"name":"scanline","doc":null,"default_value":"","external_name":"scanline","restriction":""},{"name":"canvas","doc":null,"default_value":"","external_name":"canvas","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(0...canvas.width).each do |x|\n  start = x * 3\n  red = scanline[start].to_u16\n  red = red + (red << 8)\n  green = scanline[start + 1].to_u16\n  green = green + (green << 8)\n  blue = scanline[start + 2].to_u16\n  blue = blue + (blue << 8)\n  canvas[x, y] = RGBA.new(red, green, blue)\nend"}},{"id":"decode_rgb_alpha(scanline,canvas,y,bit_depth)-class-method","html_id":"decode_rgb_alpha(scanline,canvas,y,bit_depth)-class-method","name":"decode_rgb_alpha","doc":null,"summary":null,"abstract":false,"args":[{"name":"scanline","doc":null,"default_value":"","external_name":"scanline","restriction":""},{"name":"canvas","doc":null,"default_value":"","external_name":"canvas","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""},{"name":"bit_depth","doc":null,"default_value":"","external_name":"bit_depth","restriction":""}],"args_string":"(scanline, canvas, y, bit_depth)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/scanline.cr#L31","def":{"name":"decode_rgb_alpha","args":[{"name":"scanline","doc":null,"default_value":"","external_name":"scanline","restriction":""},{"name":"canvas","doc":null,"default_value":"","external_name":"canvas","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""},{"name":"bit_depth","doc":null,"default_value":"","external_name":"bit_depth","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if bit_depth == 8\n  Scanline.decode_rgb_alpha_8(scanline, canvas, y)\nelse\n  Scanline.decode_rgb_alpha_16(scanline, canvas, y)\nend"}},{"id":"decode_rgb_alpha_16(scanline,canvas,y)-class-method","html_id":"decode_rgb_alpha_16(scanline,canvas,y)-class-method","name":"decode_rgb_alpha_16","doc":null,"summary":null,"abstract":false,"args":[{"name":"scanline","doc":null,"default_value":"","external_name":"scanline","restriction":""},{"name":"canvas","doc":null,"default_value":"","external_name":"canvas","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""}],"args_string":"(scanline, canvas, y)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/scanline.cr#L170","def":{"name":"decode_rgb_alpha_16","args":[{"name":"scanline","doc":null,"default_value":"","external_name":"scanline","restriction":""},{"name":"canvas","doc":null,"default_value":"","external_name":"canvas","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(0...canvas.width).each do |x|\n  start = x * 8\n  red = (scanline[start].to_u16 << 8) + scanline[start + 1]\n  green = (scanline[start + 2].to_u16 << 8) + scanline[start + 3]\n  blue = (scanline[start + 4].to_u16 << 8) + scanline[start + 5]\n  alpha = (scanline[start + 6].to_u16 << 8) + scanline[start + 7]\n  canvas[x, y] = RGBA.new(red, green, blue, alpha)\nend"}},{"id":"decode_rgb_alpha_8(scanline,canvas,y)-class-method","html_id":"decode_rgb_alpha_8(scanline,canvas,y)-class-method","name":"decode_rgb_alpha_8","doc":null,"summary":null,"abstract":false,"args":[{"name":"scanline","doc":null,"default_value":"","external_name":"scanline","restriction":""},{"name":"canvas","doc":null,"default_value":"","external_name":"canvas","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""}],"args_string":"(scanline, canvas, y)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/scanline.cr#L158","def":{"name":"decode_rgb_alpha_8","args":[{"name":"scanline","doc":null,"default_value":"","external_name":"scanline","restriction":""},{"name":"canvas","doc":null,"default_value":"","external_name":"canvas","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(0...canvas.width).each do |x|\n  start = x * 4\n  red = (scanline[start].to_u16 << 8) + scanline[start]\n  green = (scanline[start + 1].to_u16 << 8) + scanline[start + 1]\n  blue = (scanline[start + 2].to_u16 << 8) + scanline[start + 2]\n  alpha = (scanline[start + 3].to_u16 << 8) + scanline[start + 3]\n  canvas[x, y] = RGBA.new(red, green, blue, alpha)\nend"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/stumpycr/stumpy_png/StumpyPNG/Utils","path":"StumpyPNG/Utils.html","kind":"module","full_name":"StumpyPNG::Utils","name":"Utils","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"stumpy_png/utils.cr","line_number":2,"url":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/utils.cr"}],"repository_name":"github.com/stumpycr/stumpy_png","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/stumpycr/stumpy_png/StumpyPNG","kind":"module","full_name":"StumpyPNG","name":"StumpyPNG"},"doc":null,"summary":null,"class_methods":[{"id":"bytes_to_uint32(bytes)-class-method","html_id":"bytes_to_uint32(bytes)-class-method","name":"bytes_to_uint32","doc":null,"summary":null,"abstract":false,"args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":""}],"args_string":"(bytes)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/utils.cr#L7","def":{"name":"bytes_to_uint32","args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"bytes.reduce(0.to_u32) do |acc, byte|\n  (acc << 8) + byte\nend"}},{"id":"paeth_predictor(a8,b8,c8)-class-method","html_id":"paeth_predictor(a8,b8,c8)-class-method","name":"paeth_predictor","doc":null,"summary":null,"abstract":false,"args":[{"name":"a8","doc":null,"default_value":"","external_name":"a8","restriction":""},{"name":"b8","doc":null,"default_value":"","external_name":"b8","restriction":""},{"name":"c8","doc":null,"default_value":"","external_name":"c8","restriction":""}],"args_string":"(a8, b8, c8)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/utils.cr#L25","def":{"name":"paeth_predictor","args":[{"name":"a8","doc":null,"default_value":"","external_name":"a8","restriction":""},{"name":"b8","doc":null,"default_value":"","external_name":"b8","restriction":""},{"name":"c8","doc":null,"default_value":"","external_name":"c8","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a = a8.to_i16\nb = b8.to_i16\nc = c8.to_i16\np = (a + b) - c\npa = (p - a).abs\npb = (p - b).abs\npc = (p - c).abs\nif pa <= pb && pa <= pc\n  a.to_u8\nelse\n  if pb <= pc\n    b.to_u8\n  else\n    c.to_u8\n  end\nend\n"}},{"id":"parse_integer(bytes)-class-method","html_id":"parse_integer(bytes)-class-method","name":"parse_integer","doc":null,"summary":null,"abstract":false,"args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":""}],"args_string":"(bytes)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/utils.cr#L3","def":{"name":"parse_integer","args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"bytes.reduce(0) do |acc, byte|\n  (acc << 8) + byte\nend"}},{"id":"read_n_byte(file,n)-class-method","html_id":"read_n_byte(file,n)-class-method","name":"read_n_byte","doc":null,"summary":null,"abstract":false,"args":[{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":""},{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""}],"args_string":"(file, n)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/utils.cr#L19","def":{"name":"read_n_byte","args":[{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":""},{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"slice = Bytes.new(n)\nfile.read_fully(slice)\nslice.to_a\n"}},{"id":"uint16_to_bytes(int)-class-method","html_id":"uint16_to_bytes(int)-class-method","name":"uint16_to_bytes","doc":null,"summary":null,"abstract":false,"args":[{"name":"int","doc":null,"default_value":"","external_name":"int","restriction":""}],"args_string":"(int)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/utils.cr#L15","def":{"name":"uint16_to_bytes","args":[{"name":"int","doc":null,"default_value":"","external_name":"int","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{8, 0}.map do |n|\n  ((int >> n) & 255).to_u8\nend"}},{"id":"uint32_to_bytes(int)-class-method","html_id":"uint32_to_bytes(int)-class-method","name":"uint32_to_bytes","doc":null,"summary":null,"abstract":false,"args":[{"name":"int","doc":null,"default_value":"","external_name":"int","restriction":""}],"args_string":"(int)","source_link":"https://github.com/stumpycr/stumpy_png/blob/7f99ea3e01fab4c4527c9cc49a1d434b70da6df1/src/stumpy_png/utils.cr#L11","def":{"name":"uint32_to_bytes","args":[{"name":"int","doc":null,"default_value":"","external_name":"int","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{24, 16, 8, 0}.map do |n|\n  ((int >> n) & 255).to_u8\nend"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]}]}}